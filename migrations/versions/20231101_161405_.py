"""empty message

Revision ID: 49f5d2ce4015
Revises: 
Create Date: 2023-11-01 16:14:05.370395

"""
from alembic import op
import sqlalchemy as sa
from app.models import environment, SCHEMA


# revision identifiers, used by Alembic.
revision = '49f5d2ce4015'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('images',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=50), nullable=False),
                    sa.Column('imageUrl', sa.String(
                        length=255), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('services',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('type', sa.String(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('price', sa.Integer(), nullable=False),
                    sa.Column('description', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('staffs',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('firstname', sa.String(
                        length=40), nullable=False),
                    sa.Column('lastname', sa.String(
                        length=40), nullable=False),
                    sa.Column('availability', sa.JSON(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('firstname', sa.String(
                        length=40), nullable=False),
                    sa.Column('lastname', sa.String(
                        length=40), nullable=False),
                    sa.Column('email', sa.String(length=255), nullable=False),
                    sa.Column('username', sa.String(
                        length=40), nullable=False),
                    sa.Column('address', sa.String(
                        length=100), nullable=False),
                    sa.Column('city', sa.String(length=35), nullable=False),
                    sa.Column('state', sa.String(length=15), nullable=False),
                    sa.Column('hashed_password', sa.String(
                        length=255), nullable=False),
                    sa.Column('createdAt', sa.DateTime(), nullable=True),
                    sa.Column('updatedAt', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    sa.UniqueConstraint('username')
                    )
    op.create_table('appointments',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('userId', sa.Integer(), nullable=False),
                    sa.Column('serviceId', sa.Integer(), nullable=False),
                    sa.Column('staffId', sa.Integer(), nullable=False),
                    sa.Column('appointmentDate', sa.Date(), nullable=False),
                    sa.Column('appointmentTime', sa.Time(), nullable=False),
                    sa.Column('status', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(['serviceId'], ['services.id'], ),
                    sa.ForeignKeyConstraint(['staffId'], ['staffs.id'], ),
                    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('blogposts',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('staffId', sa.Integer(), nullable=False),
                    sa.Column('blog', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(['staffId'], ['staffs.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('carts',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('userId', sa.Integer(), nullable=True),
                    sa.Column('serviceId', sa.Integer(), nullable=False),
                    sa.Column('quantity', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['serviceId'], ['services.id'], ),
                    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('reviews',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('userId', sa.Integer(), nullable=True),
                    sa.Column('review', sa.String(), nullable=False),
                    sa.Column('stars', sa.Integer(), nullable=False),
                    sa.Column('createdAt', sa.DateTime(), nullable=True),
                    sa.Column('updatedAt', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###
    if environment == "production":
        op.execute(f"ALTER TABLE images SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE services SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE reviews SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE staffs SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE carts SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE blogposts SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE appointments SET SCHEMA {SCHEMA};")


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reviews')
    op.drop_table('carts')
    op.drop_table('blogposts')
    op.drop_table('appointments')
    op.drop_table('users')
    op.drop_table('staffs')
    op.drop_table('services')
    op.drop_table('images')
    # ### end Alembic commands ###
